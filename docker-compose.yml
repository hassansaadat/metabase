services:
  db:
    image: postgres:${POSTGRES_VERSION}
    hostname: metabase-db
    container_name: metabase-db
    restart: always
    volumes:
      - db-data:${DB_DATA_DIR}
    environment:
      - PGDATA=${DB_DATA_DIR}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - meta-compose
      - metanet

  metabase:
    image: metabase/metabase:${METABASE_VERSION}
    hostname: metabase
    container_name: metabase
    restart: always
    environment:
      MB_DB_TYPE: "postgres"
      MB_DB_DBNAME: "${DB_NAME}"
      MB_DB_PORT: "5432"
      MB_DB_USER: "${DB_USER}"
      MB_DB_PASS: "${DB_PASSWORD}"
      MB_DB_HOST: "db"
      MB_PASSWORD_COMPLEXITY: strong
      MB_PASSWORD_LENGTH: 10
      JAVA_TIMEZONE: "${MB_JAVA_TIMEZONE}"
    volumes:
      - /dev/urandom:/dev/random:ro
    networks:
      - meta-compose
      - metanet
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - ${MB_PORT}:3000
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - db

networks:
  meta-compose:
    driver: bridge
  metanet:
    name: metanet
    external: true

volumes:
  db-data:
